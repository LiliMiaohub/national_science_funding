##############################################################
# main snakefile for the national funding project workflow. Target rules are distributed across the following files:
# - Snakefile_datacleaning.smk
#
#
#
#
##############################################################

configfile: "config.yaml"

from os.path import join as osjoin
import pandas as pd



#main directories
PROJ_DIR = config["proj_home"]
DATA_DIR = osjoin(PROJ_DIR, 'Data')
RAW_DATA_DIR = osjoin(DATA_DIR, 'RawData')
DERIVE_DATA_DIR = osjoin(DATA_DIR, 'DerivedData')
ADDITIONAL_DATA_DIR = osjoin(DATA_DIR, 'AdditionalData')
FIG_DIR = osjoin(PROJ_DIR, 'Figs', 'Figs')

#PAPER_SRC, SUPP_SRC = [j(PAPER_DIR, f) for f in ("main.tex", "supp.tex")]
#PAPER, SUPP = [j(PAPER_DIR, f) for f in ("main.pdf", "supp.pdf")]


#raw data files
RAW_PUB = osjoin(RAW_DATA_DIR, 'pubs.csv')
RAW_AUTHOR = osjoin(RAW_DATA_DIR, 'pub_author.csv')
RAW_FUNDER = osjoin(RAW_DATA_DIR, 'pub_funder.csv')


#additional data
CNTRY_CONVERT_DATA = osjoin(ADDITIONAL_DATA_DIR, 'cntry_convert.xlsx')
CNTRY_FLAG_DATA = osjoin(ADDITIONAL_DATA_DIR, 'country_WoS_ECI_WB_flags.tsv')
CNTRY_REGION_DATA = osjoin(ADDITIONAL_DATA_DIR, 'cntry_region.xlsx')
WORLD_SHP_PATH = osjoin(ADDITIONAL_DATA_DIR, 'world_map_shp', 'ne_50m_admin_0_countries.shp')


#cleaned raw data
PUB_DATA = osjoin(DERIVE_DATA_DIR, 'CleanedRawData', 'pub.pkl')
#Funding by fractional counting
CNTRY_FUND_FRAC = osjoin(DERIVE_DATA_DIR, 'Derived', 'cntry_fund_frac.csv')
#Research profile without international funding
PUB_NOINT_FUND_FILE = osjoin(DERIVE_DATA_DIR, 'Derived','dependence','pub_noint_fund.csv')
#Research profile without exclusive international funding where domestic and international funded paper are retained
PUB_NO_EXCLUSIVE_INT_FUND_FILE = osjoin(DERIVE_DATA_DIR, 'Derived','dependence','pub_no_exclusive_int_fund.csv')
#number of publication of countries using full counting assignment
CNTRY_AUTHOR_FULL = osjoin(DERIVE_DATA_DIR, 'Derived', 'cntry_author_full.csv')
#country's research profile without publications that are funded by the top20 countries
PUB_NOFOREIGN_TOP20 = osjoin(DERIVE_DATA_DIR, 'Derived','dependence', 'pub_noforeign_fund_top20.csv')
#country's research profile without publications that are exclusively funded by the top20 countries
PUB_NOFOREIGN_EXCLUSIVE_TOP20 = osjoin(DERIVE_DATA_DIR, 'Derived','dependence', 'pub_noforeign_exclusive_fund_top20.csv')
#Funding units flow between countries
FUNDING_UNIT_FLOW = osjoin(DERIVE_DATA_DIR, 'Derived', 'funding_unit_flow.csv')
#publication reduction of countries if all of countries are removed iteratively
PUB_NOFOREIGN_ALL2ALL = osjoin(DERIVE_DATA_DIR, 'Derived', 'dependence','pub_noforeign_fund_all2all.csv')
#backbone network of the publication reduction of all countries to all countries with the alpha equals 0.005
ALL2ALL_BACKBONE_ALPHA = osjoin(DERIVE_DATA_DIR,'Derived','network','all2all_backbone_alpha{alpha}.gexf')
ALL2ALL_BACKBONE_GRAPH = osjoin(ADDITIONAL_DATA_DIR,'all2all_backbone_alpha{alpha}.graphml')
#funding intensity portfolio of outlier countries
FUNDING_PORTFOLIO_OUTLIER = osjoin(FIG_DIR, 'funding_portfolio_outlier.csv')
REGRESSION_TABLE = osjoin(DERIVE_DATA_DIR, 'Derived', 'dependence', 'funding_unit_flow.csv')
REGRESSION_RESULT = osjoin(FIG_DIR, 'regression.pdf')



#Plots
CNTRY_FUND_FRAC_PLOT = osjoin(FIG_DIR, 'cntry_funding_frac.pdf')
GLOBAL_FUND_PLOT = osjoin(FIG_DIR, 'global_funding.pdf')
FUNDING_INTENSITY_OVERALL_PLOT = osjoin(FIG_DIR,'funding_intensity_overall.pdf')
FUNDING_PORTFOLIO_PLOT = osjoin(FIG_DIR, 'funding_portfolio.pdf')
FUNDING_INTENSITY_SELF_PLOT = osjoin(FIG_DIR,'funding_intensity_self.pdf')
PUB_REDUCTION_GLOBAL_PLOT = osjoin(FIG_DIR, 'dependence_NoForeignFund','pub_reduction_global.pdf')
PUB_REDUCTION_NO_EXCLUSIVE_FOREIGN_GLOBAL_PLOT = osjoin(FIG_DIR, 'dependence_NoForeignFund','pub_reduction_no_exclusive_foreign_global.pdf')
PUB_CHANGE_GLOBAL_PLOT = osjoin(FIG_DIR, 'dependence_NoForeignFund','pub_change_global.pdf')
PUB_CHANGE_NO_EXCLUSIVE_GLOBAL_PLOT = osjoin(FIG_DIR, 'dependence_NoForeignFund','pub_change_no_exclusive_global.pdf')
PUB_REDUCTION_TOP_PLOT = osjoin(FIG_DIR, 'pub_reduction_by_top10.pdf')
PROFILECHANGE_TOP_PLOT = osjoin(FIG_DIR, 'profilechange_by_top10.pdf')
PUB_REDUCTION_EXCLUSIVE_TOP_PLOT = osjoin(FIG_DIR, 'pub_reduction_exclusive_by_top10.pdf')
PROFILECHANGE_EXCLUSIVE_TOP_PLOT = osjoin(FIG_DIR, 'profilechange_exclusive_by_top10.pdf')
#get top20 countries
INFLUENCIAL_AREA_PLOT = osjoin(FIG_DIR, "influence_area", "{cntry}.pdf")
BACKBONE_PLOT = osjoin(FIG_DIR, 'network','backbone_all_alpha{alpha}.pdf')
BACKBONE_INDIVIDUAL_CNTRY_PLOT = osjoin(FIG_DIR,'network','individual_cntry','{alpha}','{cntry}.pdf')

#include rules
include: "Snakefile_dataclean.smk"
include: "Snakefile_globalfunding.smk"
include: "Snakefile_intensity.smk"
include: "Snakefile_dependence.smk"
include: "Snakefile_impact.smk"


#wildcards
top20list = ['China','United States','Japan','Germany','South Korea','United Kingdom','Canada','Spain','EU','France']
alphas = ["001","002","0005"]


rule all:
    input:
        #PAPER, SUPP
        PUB_DATA,
        CNTRY_FUND_FRAC,
        CNTRY_FUND_FRAC_PLOT,
        GLOBAL_FUND_PLOT,
        FUNDING_INTENSITY_OVERALL_PLOT,
        FUNDING_PORTFOLIO_PLOT,
        FUNDING_PORTFOLIO_OUTLIER,
        FUNDING_INTENSITY_SELF_PLOT,
        PUB_NOINT_FUND_FILE,
        PUB_NO_EXCLUSIVE_INT_FUND_FILE,
        CNTRY_AUTHOR_FULL,
        PUB_REDUCTION_GLOBAL_PLOT,
        PUB_REDUCTION_NO_EXCLUSIVE_FOREIGN_GLOBAL_PLOT,
        PUB_CHANGE_GLOBAL_PLOT,
        PUB_CHANGE_NO_EXCLUSIVE_GLOBAL_PLOT,
        PUB_NOFOREIGN_TOP20,
        PUB_REDUCTION_TOP_PLOT,
        PUB_REDUCTION_EXCLUSIVE_TOP_PLOT,
        PROFILECHANGE_TOP_PLOT,
        PROFILECHANGE_EXCLUSIVE_TOP_PLOT,
        expand(INFLUENCIAL_AREA_PLOT, cntry=top20list),
        FUNDING_UNIT_FLOW,
        PUB_NOFOREIGN_ALL2ALL,
        expand(ALL2ALL_BACKBONE_ALPHA, alpha=alphas),
        expand(BACKBONE_PLOT, alpha=alphas),
        expand(BACKBONE_INDIVIDUAL_CNTRY_PLOT, alpha='0005', cntry=top20list),
        expand(REGRESSION_TABLE),
        expand(REGRESSION_RESULT)

        

#rule paper:
#    input:
#        PAPER_SRC, SUPP_SRC
#    params:
#        paper_dir = PAPER_DIR
#    output:
#        PAPER, SUPP
#    shell:
#        "cd {params.paper_dir}; make"

        

